#include<iostream>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<sstream>
#include<set>
#include<unordered_set>
#include<map>
#include<unordered_map>
#include<algorithm>
using namespace std;
bool solver(vector<int>temp){
    int n=temp.size();
    unordered_set<int>st;
    int t=0;
    st.insert(temp[t]);
    while(st.size()<n){
        t=(t+temp[t]+n)%n;
        if(st.count(temp[t]))
            return false;
        st.insert(temp[t]);
    }
    if((t+temp[t]+n)%n!=0)
        return false;
    return true;
}
int main(){
    int m;
    cin>>m;
    int k=m;
    while(1){
        k++;
        int t=k;
        vector<int>temp;
        unordered_map<int,int>mp;
        bool flag=false;
        while(t){
            int k=t%10;
            temp.push_back(k);
            if(k==0){
                flag=true;
                break;
            }
            mp[k]++;
            if(mp[k]>1){
                flag=true;
                break;
            }
            t/=10;
        }
        if(flag)
            continue;
        reverse(temp.begin(),temp.end());
        if(solver(temp)){
            cout<<k<<endl;
            return 0;
        }
    }
    return 0;
}
