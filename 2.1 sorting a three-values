#include<iostream>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<sstream>
#include<set>
#include<unordered_set>
#include<map>
#include<unordered_map>
#include<algorithm>
using namespace std;
int main(){
    int n;
    cin>>n;
    int res=0;
    vector<int>dp(n,0);
    int n1=0,n2=0,n3=0;
    for(int i=0;i<n;i++){
        cin>>dp[i];
        if(dp[i]==1)
            n1++;
        else if(dp[i]==2)
            n2++;
        else
            n3++;
    }
    for(int i=0;i<n1;i++){
        if(dp[i]==1)
            continue;
        if(dp[i]==2){
            bool flag=true;
            for(int j=n1;j<n1+n2;j++){
                if(dp[j]==1){
                    swap(dp[i],dp[j]);
                    res++;
                    flag=false;
                    break;
                }
            }
            if(flag){
                for(int j=n1+n2;j<n;j++){
                    if(dp[j]==1){
                        swap(dp[i],dp[j]);
                        res++;
                        break;
                    }
                }
            }
        }
        else{
            bool flag=true;
            for(int j=n1+n2;j<n;j++){
                if(dp[j]==1){
                    swap(dp[i],dp[j]);
                    res++;
                    flag=false;
                    break;
                }
            }
            if(flag){
                for(int j=n1;j<n1+n2;j++){
                    if(dp[j]==1){
                        swap(dp[i],dp[j]);
                        res++;
                        break;
                    }
                }
            }
        }
    }
    for(int i=n-1;i>n-n3-1;i--){
        if(dp[i]==3)
            continue;
        for(int j=n-n3-1;j>=n1;j--){
            if(dp[j]==3){
                swap(dp[i],dp[j]);
                res++;
                break;
            }
        }
    }
    cout<<res<<endl;
    return 0;
}
