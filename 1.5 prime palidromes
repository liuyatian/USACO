#include<iostream>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<sstream>
#include<set>
#include<unordered_set>
#include<map>
#include<unordered_map>
#include<algorithm>
using namespace std;
bool prime(int x){
    for(int i=2;i<=sqrt(x);i++){
        if(x%i==0)
            return false;
    }
    return true;
}
int main(){
    int a,b;
    cin>>a>>b;
    vector<int>dp;
    for(int i=5;i<=9;i+=2)
        dp.push_back(i);
    for(int i=1;i<=9;i+=2){
        dp.push_back(i*10+i);
    }
    for(int i=1;i<=9;i+=2){
        for(int j=0;j<=9;j++){
            dp.push_back(i*100+j*10+i);
        }
    }
    for(int i=1;i<=9;i+=2){
        for(int j=0;j<=9;j++){
            dp.push_back(i*1000+j*100+j*10+i);
        }
    }
    for(int i=1;i<=9;i+=2){
        for(int j=0;j<=9;j++){
            for(int k=0;k<=9;k++){
                dp.push_back(i*10000+j*1000+k*100+j*10+i);
            }
        }
    }
    for(int i=1;i<=9;i+=2){
        for(int j=0;j<=9;j++){
            for(int k=0;k<=9;k++){
                dp.push_back(i*100000+j*10000+k*1000+k*100+j*10+i);
            }
        }
    }
    for(int i=1;i<=9;i++){
        for(int j=0;j<=9;j++){
            for(int k=0;k<=9;k++){
                for(int t=0;t<=9;t++){
                    dp.push_back(i*1000000+j*100000+k*10000+t*1000+k*100+j*10+i);
                }
            }
        }
    }
    for(int i=1;i<=9;i++){
        for(int j=0;j<=9;j++){
            for(int k=0;k<=9;k++){
                for(int t=0;t<=9;t++){
                    dp.push_back(i*10000000+j*1000000+k*100000+t*10000+t*1000+k*100+j*10+i);
                }
            }
        }
    }
    for(int i=0;i<dp.size();i++){
        if(dp[i]<a)
            continue;
        if(dp[i]>b)
            break;
        if(prime(dp[i]))
            cout<<dp[i]<<endl;
    }
    return 0;
}
