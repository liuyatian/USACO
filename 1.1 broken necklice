#include<iostream>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<sstream>
#include<set>
#include<unordered_set>
#include<map>
#include<unordered_map>
#include<algorithm>
using namespace std;
int main(){
    int n;
    cin>>n;
    string s;
    cin>>s;
    int res=0;
    for(int i=0;i<n;i++){
        int flag=0,left=i,right=(i+1)%n,leftsum=1,rightsum=1;
        if(s[left]=='r'){
            flag=1;
        }
        else if(s[left]=='b'){
            flag=-1;
        }
        int cur=(left-1+n)%n;
        while(cur!=left){
            if(flag==0){
                if(s[cur]=='r')
                    flag=1;
                else if(s[cur]=='b')
                    flag=-1;
                leftsum++;
            }
            else if(flag==1){
                if(s[cur]=='r'||s[cur]=='w')
                    leftsum++;
                else
                    break;
            }
            else{
                if(s[cur]=='b'||s[cur]=='w')
                    leftsum++;
                else
                    break;
            }
            cur=(cur-1+n)%n;
        }
        cur=(right+1)%n;
        flag=0;
        if(s[right]=='r'){
            flag=1;
        }
        else if(s[right]=='b'){
            flag=-1;
        }
        while(cur!=right){
            if(flag==0){
                if(s[cur]=='r')
                    flag=1;
                else if(s[cur]=='b')
                    flag=-1;
                rightsum++;
            }
            else if(flag==1){
                if(s[cur]=='r'||s[cur]=='w')
                    rightsum++;
                else
                    break;
            }
            else{
                if(s[cur]=='b'||s[cur]=='w')
                    rightsum++;
                else
                    break;
            }
            cur=(cur+1)%n;
        }
        res=max(leftsum+rightsum,res);
    }
    res=min(res,n);
    cout<<res<<endl;
    return 0;
}
